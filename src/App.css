:root {
  --saffron: #D4804D; /* the robe color - more muted orange */
  --cyber-blue: #4FD4C6; /* the tech elements */
  --stone-grey: #D4D0C6; /* light stone background */
  --deep-forest: #1A2621; /* dark elements/text */
  --moss-green: #4D5E4A; /* accent color from foliage */
  --yantra-color: #4FD4C6;
}

@import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Karma:wght@400;500&display=swap');


.image-overlay h3 {
  font-family: 'Orbitron', serif;
  color: white;
  margin: 0;
}

body {
  background-color: var(--stone-grey);
  color: var(--deep-forest);
  margin: 0;
  padding: 0;
}

.App {
  text-align: center;
  max-width: 1200px;
  margin: 20px auto;
  padding: 40px;
  border: 30px solid #9a958e;
  box-shadow: inset 0 0 10px rgba(0,0,0,0.2);
  background: var(--stone-grey);
  position: relative;
}

/* Add some texture to the border */
.App::before {
  content: '';
  position: absolute;
  top: -30px;
  left: -30px;
  right: -30px;
  bottom: -30px;
  background: repeating-linear-gradient(
    45deg,
    #8a8580,
    #9a958e 10px
  );
  z-index: -1;
}

header {
  padding: 20px 0;
}

nav ul {
  list-style: none;
  padding: 0;
  display: flex;
  justify-content: center;
  gap: 20px;
}

nav li {
  cursor: pointer;
  color: var(--deep-forest);
  transition: color 0.3s ease;
  position: relative;
  padding-bottom: 3px;
}

nav li:hover {
  color: var(--cyber-blue);
}

nav li:after {
  content: '';
  position: absolute;
  width: 0;
  height: 2px;
  bottom: 0;
  left: 0;
  background-color: var(--cyber-blue);
  transition: width 0.3s ease;
}

nav li:hover:after {
  width: 100%;
}

main {
  padding: 40px 0;
}

section {
  margin: 40px 0;
  padding: 20px;
}

.hero {
  margin-top: 0;
}

h1 {
  color: var(--saffron);
  font-size: 3rem;
  margin-bottom: 1rem;
}

h2 {
  color: var(--saffron);
  font-size: 2rem;
  margin-bottom: 1.5rem;
}

.featured, .latest-writings {
  background: rgba(255,255,255,0.05);
  border-radius: 4px;
}

.site-logo {
  max-width: 600px;  /* adjust size as needed */
  height: auto;
  margin: 20px 0;
}

.gallery-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  padding: 2rem;
}

.gallery-item {
  position: relative;
  overflow: hidden;
  border-radius: 4px;
  transition: transform 0.3s ease;
}

.gallery-item:hover {
  transform: translateY(-5px);
}

.gallery-item img {
  width: 100%;
  height: auto;
  display: block;
}

.image-overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background: linear-gradient(transparent, rgba(0,0,0,0.7));
  padding: 1rem;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.gallery-item:hover .image-overlay {
  opacity: 1;
}

.image-overlay h3 {
  color: white;
  margin: 0;
}

.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.9);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modal-content {
  max-width: 70%;
  max-height: 90vh;
  display: flex;
  transition: all 0.3s ease;
  background: rgba(0, 0, 0, 0.9);
  padding: 20px;
  border-radius: 8px;
  z-index: 1;
}

.modal-content.expanded {
  width: 95%; /* Slightly wider container */
  justify-content: space-between;
  gap: 2rem; /* Space between image and description */
}



.modal-content.expanded .modal-image-container img {
  max-height: 85vh; /* Taller maximum height */
  width: auto;
  object-fit: contain;
}

.modal-image-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  transition: all 0.3s ease;
}

.modal-image-container img {
  max-height: 70vh;
  width: auto;
}

.modal-description-container {
  padding: 2rem;
  display: flex;
  flex-direction: column;
  justify-content: center; /* Vertical centering */
  align-items: center; /* Horizontal centering */
  align-self: center; /* Centers the container itself */
  z-index: 1;
}

.modal-title {
  color: #D4804D;
  font-family: 'Karma', serif;
  font-size: 24px;
  text-align: center;
  margin-bottom: 15px;
  text-shadow: 0 0 10px rgba(79, 212, 198, 0.5);
  background-color: rgba(0, 0, 0, 0.8);
  padding: 10px;
  border-radius: 4px;
  border: 1px solid rgba(79, 212, 198, 0.3);
  animation: signalFlicker 8s infinite;
  position: relative;
}

@keyframes signalFlicker {
  0%, 95%, 100% {
    opacity: 1;
    transform: skew(0deg);
    filter: none;
  }
  95.5% {
    opacity: 0.8;
    transform: skew(-3deg);
    filter: hue-rotate(90deg) saturate(150%);
  }
  96% {
    opacity: 0.4;
    transform: skew(5deg) translateX(-2px);
    filter: hue-rotate(-30deg) saturate(200%);
  }
  96.5% {
    opacity: 0.9;
    transform: skew(-1deg) translateX(3px);
    filter: none;
  }
  97% {
    opacity: 0.6;
    transform: skew(0deg);
    filter: brightness(2);
  }
}

/* Add this for extra digital noise effect during the flicker */
.modal-title::before {
  content: attr(data-text);
  position: absolute;
  left: 0;
  text-shadow: 2px 0 var(--cyber-blue);
  width: 100%;
  clip: rect(44px, 450px, 56px, 0);
  animation: glitchNoise 5s infinite;
  display: none;
}

@keyframes glitchNoise {
  0% {
    clip: rect(44px, 450px, 56px, 0);
  }
  5% {
    clip: rect(83px, 450px, 96px, 0);
  }
  10% {
    clip: rect(31px, 450px, 48px, 0);
  }
  15% {
    clip: rect(13px, 450px, 25px, 0);
  }
}

/* Make the glitch effect appear during the flicker */
.modal-title:not(:hover)::before {
  display: block;
  animation: glitchNoise 0.3s steps(1) reverse;
  opacity: 0.8;
}

.modal-description {
  color: #4FD4C6;
  background: rgba(0, 0, 0, 0.85);  /* Add this back for text readability */
  padding: 13px;
  border-radius: 2px;
  font-size: 19px;
  text-shadow: 0 0 10px rgba(79, 212, 198, 0.5);
  width: 100%;
  white-space: pre-line;
  text-align: center;
  margin: auto;
  position: relative;
}

.modal-description span {
  font-family: 'Iceland', cursive;
  font-size: 1.2em;  /* Slightly larger */
  letter-spacing: 0.05em;  /* Subtle spacing */
  color: white;
  position: relative;
  text-shadow: 
      0 0 10px rgba(79, 212, 198, 0.9),
      0 0 20px rgba(79, 212, 198, 0.7),
      0 0 30px rgba(79, 212, 198, 0.5),
      0 0 40px rgba(79, 212, 198, 0.3);
  animation: glowPulse 3s ease-in-out infinite;
}

@keyframes glowPulse {
  0%, 100% {
      text-shadow: 
          0 0 10px rgba(79, 212, 198, 0.9),
          0 0 20px rgba(79, 212, 198, 0.7),
          0 0 30px rgba(79, 212, 198, 0.5),
          0 0 40px rgba(79, 212, 198, 0.3);
  }
  50% {
      text-shadow: 
          0 0 20px rgba(79, 212, 198, 1),
          0 0 40px rgba(79, 212, 198, 0.8),
          0 0 60px rgba(79, 212, 198, 0.6),
          0 0 80px rgba(79, 212, 198, 0.4);
  }
}

.vortex-expanded .modal-description span {
  color: #FF9B4F;  /* Your orange color */
  text-shadow: 
      0 0 10px rgba(255, 155, 79, 0.8),
      0 0 20px rgba(255, 155, 79, 0.4),
      0 0 2px rgba(0, 0, 0, 0.9);
}

.glitch-wrapper {
  position: relative;
  z-index: 2;
}

.glitch-wrapper span {
  animation: glitchText 10s infinite;
  position: relative;
  display: block;
}

@keyframes glitchText {
  0%, 98%, 100% { 
    transform: none;
    text-shadow: 0 0 10px rgba(79, 212, 198, 0.5);
    filter: none;
  }
  98.1% {
    transform: translate(-2px, 0);
    text-shadow: 2px 0 var(--cyber-blue), 0 0 15px var(--cyber-blue);
    filter: brightness(1.5);
  }
  98.2% {
    transform: translate(2px, 0);
    text-shadow: -2px 0 var(--cyber-blue), 0 0 15px var(--cyber-blue);
    filter: hue-rotate(45deg);
  }
  98.3% {
    transform: none;
    text-shadow: -1px 0 var(--cyber-blue), 1px 0 var(--cyber-blue), 0 0 20px var(--cyber-blue);
    filter: brightness(2);
  }
}

.scan-line {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  background: linear-gradient(
    180deg,
    transparent 0%,
    rgba(79, 212, 198, 0.22) 50%,
    transparent 100%
  );
  animation: holoScan 12s linear infinite;
  z-index: 1;
  mix-blend-mode: screen; 
}

@keyframes holoReveal {
  0% {
    opacity: 0;
    transform: translateY(10px);
    text-shadow: 0 0 0 rgba(79, 212, 198, 0);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
    text-shadow: 
      0 0 10px rgba(79, 212, 198, 1),
      0 0 20px rgba(79, 212, 198, 0.8);
  }
}

@keyframes holoScan {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}

@keyframes holoGlow {
  0%, 100% {
    text-shadow: 
      0 0 10px rgba(79, 212, 198, 0.5),
      0 0 20px rgba(79, 212, 198, 0.3);
  }
  50% {
    text-shadow: 
      0 0 15px rgba(79, 212, 198, 1),
      0 0 25px rgba(79, 212, 198, 0.8);
  }
}

.sanskrit-rain-canvas {
  position: absolute;  /* Changed from fixed */
  width: 100%;         /* Changed from 36% */
  height: 100%;
  pointer-events: none;
  z-index: 0;
  top: 0;
  left: 0;
}

.temp-char {
  font-family: 'Iceland', cursive;
  color: #4FD4C6;  /* Cyan */
  animation: textFlash 0.5s infinite;
}

@keyframes textFlash {
  0%, 100% { 
      color: #4FD4C6;
      text-shadow: 0 0 10px rgba(79, 212, 198, 0.8);
  }
  50% { 
      color: white;
      text-shadow: 
          0 0 10px rgba(255, 255, 255, 0.8),
          0 0 20px rgba(79, 212, 198, 0.6);
  }
}

@keyframes pulse {
  0% { opacity: 0.5; }
  50% { opacity: 1; }
  100% { opacity: 0.5; }
}

.modal-description::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: repeating-linear-gradient(
    45deg,
    rgba(79, 212, 198, 0.03) 0px,
    transparent 3px,
    rgba(79, 212, 198, 0.03) 6px
  );
  animation: interferenceShift 25s linear infinite;
}

@keyframes interferenceShift {
  0% { background-position: 0 0; }
  100% { background-position: 100px 100px; }
}

.modal-content .modal-title {
  font-family: 'Orbitron', sans-serif;
}

.modal-content .modal-description {
  font-family: 'Karma', serif !important; /* Adding !important as a last resort */
}

.glyph-button {
  cursor: pointer;
  transition: all 0.3s ease;
  margin-top: 20px; /* Add space between title and button */
  background: rgba(0, 0, 0, 0.8);
  padding: 10px;
  border-radius: 50%;
  transform: scale(2);
}

.glyph-base {
  fill: rgba(0, 0, 0, 0.9);
  stroke: #4FD4C6;
  stroke-width: 2; /* Made thicker */
}

.glyph-geometry {
  fill: none;
  stroke: #4FD4C6;
  stroke-width: 2;
  opacity: 0.8; /* Increased opacity */
}

.glyph-circuit {
  stroke: #4FD4C6;
  stroke-width: 2;
  opacity: 0.9;
}

.glyph-center {
  fill: #4FD4C6;
  filter: url(#glow);
}

.glyph-core {
  fill: #4FD4C6;
  filter: url(#glow);
  opacity: 0.9;
}

.glyph-button:hover .glyph-geometry {
  animation: rotate 4s linear infinite;
  transform-origin: center;
}

.glyph-button:hover .glyph-circuit {
  animation: pulse-opacity 2s ease-in-out infinite;
}

.glyph-button:hover .glyph-center {
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% { r: 5; }
  50% { r: 7; }
  100% { r: 5; }
}

@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes pulse-opacity {
  0% { opacity: 0.4; }
  50% { opacity: 1; }
  100% { opacity: 0.4; }
}

.modal-description span {
  position: relative;
}

/* First row with varied spacing */
.modal-description span::after {
  --artifacts1: "ॐ     ࿗   ॱ      ࿘    ः     ॥     श्री    ꣳ       हूं     क्षः      ऐं    क्लीं     सौः      नमः     स्वाहा";
  content: var(--artifacts1);
  position: absolute;
  left: -2rem;
  right: 0;
  text-shadow: 0 0 10px var(--cyber-blue);
  opacity: 0;
  animation: artifacts1 7s infinite;
  letter-spacing: random(0.5rem, 1.2rem);  /* varied spacing */
  white-space: pre;
}

/* Second row with different symbols and spacing */
.modal-description span > div:after {
  --artifacts2: "राम    ࿘     कृष्ण    ॐ     हरे     ॱ    गं     नमः     शिवाय    ࿗     ः";
  content: var(--artifacts2);
  position: absolute;
  left: 1rem;
  top: 1.8rem;
  text-shadow: 0 0 10px var(--cyber-blue);
  opacity: 0;
  animation: artifacts2 7s infinite;
  letter-spacing: 1.5rem;  /* wider spacing */
  white-space: pre;
}

/* Third row with another variation */
.modal-description span > div:before {
  --artifacts3: "मणि    पद्मे    ࿗     हूं     ॐ     ࿘    श्री    गणेश     नमः";
  content: var(--artifacts3);
  position: absolute;
  left: -3rem;
  top: 3.2rem;
  text-shadow: 0 0 10px var(--cyber-blue);
  opacity: 0;
  animation: artifacts3 7s infinite;
  letter-spacing: 0.8rem;  /* tighter spacing */
  white-space: pre;
}

@keyframes artifacts1 {
  0%, 95%, 100% { 
    opacity: 0;
    transform: translateY(0);
  }
  95.5% { 
    opacity: 0.7;
    transform: translateY(5px) translateX(1rem);  /* added horizontal movement */
  }
  96% { 
    opacity: 0;
    transform: translateY(15px) translateX(-0.5rem);
  }
}

@keyframes artifacts2 {
  0%, 94.7%, 100% { 
    opacity: 0;
    transform: translateY(0);
  }
  95.2% { 
    opacity: 0.5;
    transform: translateY(10px) translateX(-1rem);
  }
  95.7% {
    opacity: 0.3;
    transform: translateY(20px) translateX(0.5rem);
  }
}

@keyframes artifacts3 {
  0%, 95.2%, 100% { 
    opacity: 0;
    transform: translateY(0);
  }
  95.7% { 
    opacity: 0.4;
    transform: translateY(8px) translateX(0.8rem);
  }
  96.2% {
    opacity: 0.2;
    transform: translateY(18px) translateX(-0.3rem);
  }
}

/* Add this to your existing CSS */
.modal-description {
  position: relative; /* Make sure this is set */
  z-index: 1; 
}

.modal-description::before {
  --large-om: "ॐ";
  content: var(--large-om);
  position: absolute;
  font-size: 8rem;
  opacity: 0;
  top: 60%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: var(--cyber-blue);
  text-shadow: 
    0 0 20px var(--cyber-blue),
    0 0 40px rgba(79, 212, 198, 0.5);
  animation: flashOm 7s infinite;
  z-index: -1;
  pointer-events: none;
}

@keyframes flashOm {
  0%, 97%, 100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
  }
  97.2% {
    opacity: 0.5; /* Brighter appearance */
    transform: translate(-20%, -70%) scale(1.1);
    text-shadow: 0 0 30px var(--cyber-blue), 0 0 50px rgba(79, 212, 198, 0.7);
  }
  97.4% {
    opacity: 0.15; /* Very subtle */
    transform: translate(-80%, -30%) scale(1);
    text-shadow: 0 0 15px var(--cyber-blue), 0 0 25px rgba(79, 212, 198, 0.3);
  }
  97.6% {
    opacity: 0.35; /* Medium visibility */
    transform: translate(-30%, -40%) scale(0.9);
    text-shadow: 0 0 25px var(--cyber-blue), 0 0 35px rgba(79, 212, 198, 0.5);
  }
  97.8% {
    opacity: 0.6; /* Most visible */
    transform: translate(-60%, -60%) scale(1.05);
    text-shadow: 0 0 35px var(--cyber-blue), 0 0 55px rgba(79, 212, 198, 0.8);
  }
}

.modal-description {
  position: relative;
  background: transparent;
  /*border: 1px solid rgba(79, 212, 198, 0.3);*/
  transform-style: preserve-3d;
  perspective: 2000px;
  transform: rotateX(5deg);
  animation: screenFloat 10s ease-in-out infinite;
  box-shadow: 
    0 0 20px rgba(79, 212, 198, 0.1),
    inset 0 0 30px rgba(79, 212, 198, 0.1);
  backdrop-filter: blur(0px);
}

@keyframes screenFloat {
  0%, 100% { transform: rotateX(5deg) translateZ(0px); }
  50% { transform: rotateX(3deg) translateZ(10px); }
}



.stone-columns {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  height: 100vh;
  pointer-events: none;
  display: flex;
  justify-content: space-between;
  z-index: 1000;
}

.stone-column {
  width: 167px;
  height: 100%;
  background-image: url('./images/pillar.jpg');  /* Change this to new image */
  background-size: 100% auto;
  background-repeat: repeat-y;
  position: relative;
}

/* If needed, specific positioning for left/right columns */
.stone-column.left {
  margin-left: 0;
}

.stone-column.right {
  margin-right: 0;
}


/* Optional: Add a darkening overlay to make glyphs stand out better */
.stone-column::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.3);  /* Subtle darkening */
  z-index: 1;
}

.glyph-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to bottom,
    transparent,
    rgba(79, 212, 198, 0.1),
    transparent
  );
}

.column-glyphs {
  position: absolute;
  inset: 0;
  opacity: 0.8;
  filter: drop-shadow(0 0 5px var(--cyber-blue));
}

.column-glyphs {
  position: absolute;
  inset: 0;
  z-index: 2;
}

.glyph {
  fill: none;
  stroke: var(--cyber-blue);
  stroke-width: 1.5;
  opacity: 0;
  filter: drop-shadow(0 0 8px var(--cyber-blue));
}

.tech-circle, .tech-inner {
  fill: rgba(79, 212, 198, 0.1);
}

.energy-node {
  fill: var(--cyber-blue);
}

.energy-flow {
  stroke-dasharray: 10 5;
}

/* More varied and complex animations */
@keyframes glyphReveal {
  0%, 100% {
    opacity: 0;
    filter: drop-shadow(0 0 2px var(--cyber-blue));
    transform: scale(0.95);
  }
  25%, 75% {
    opacity: 0.8;
    filter: drop-shadow(0 0 12px var(--cyber-blue));
    transform: scale(1);
  }
  50% {
    opacity: 0.6;
    filter: drop-shadow(0 0 8px var(--cyber-blue));
    transform: scale(1.05);
  }
}

/* Different animation delays for each glyph */
.glyph-1 {
  animation: glyphReveal 8s infinite 0s;
}

.glyph-2 {
  animation: glyphReveal 8s infinite 2s;
}

.glyph-3 {
  animation: glyphReveal 8s infinite 4s;
}

.glyph-4 {
  animation: glyphPulse 4s infinite 1s;
}

.glyph-5 {
  animation: powerFlow 6s infinite;
}

@keyframes glyphReveal {
  0%, 20%, 100% {
    opacity: 0;
    filter: drop-shadow(0 0 2px var(--cyber-blue));
  }
  30%, 90% {
    opacity: 0.8;
    filter: drop-shadow(0 0 8px var(--cyber-blue));
  }
}

@keyframes glyphPulse {
  0%, 100% {
    opacity: 0.4;
    filter: drop-shadow(0 0 5px var(--cyber-blue));
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    filter: drop-shadow(0 0 15px var(--cyber-blue));
    transform: scale(1.1);
  }
}

@keyframes powerFlow {
  0% {
    stroke-dasharray: 10;
    stroke-dashoffset: 100;
    opacity: 0.3;
  }
  50% {
    opacity: 0.8;
  }
  100% {
    stroke-dasharray: 10;
    stroke-dashoffset: 0;
    opacity: 0.3;
  }
}

.close-glyph {
  position: absolute;
  top: 20px;
  right: 200px;
  cursor: pointer;
  transition: all 0.3s ease;
  z-index: 10;
}

.close-glyph:hover {
  transform: scale(1.1);
  filter: drop-shadow(0 0 10px rgba(79, 212, 198, 0.8));
}

/* Add subtle scanning effect */
.glyph-overlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(
    180deg,
    transparent,
    rgba(79, 212, 198, 0.1),
    transparent
  );
  animation: scan 8s linear infinite;
}

@keyframes scan {
  0% { transform: translateY(-100%); }
  100% { transform: translateY(100%); }
}

.subtle-body-container {
  width: 100%;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background: black;
}

.subtle-body {
  max-height: 80vh;
  width: auto;
}

/* 16:9 ASPECT RATIO CONTAINER FOR MODAL */

.modal-viewport {
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
}

.sixteen-nine-container {
  aspect-ratio: 16/9;
  width: 95vw;  /* Use most of screen width */
  height: 95vh; /* Use most of screen height */
  max-width: 95vw;
  max-height: 53.4vw; /* Maintains 16:9 when width-constrained */
  position: relative;
  overflow: hidden;
}

/* Keep stone columns at original size but positioned for 16:9 */
.sixteen-nine-container .stone-column {
  width: 167px; /* Your original perfect size */
}

.sixteen-nine-container .sanskrit-rain-canvas {
  right: 143px; /* Start with original, we'll adjust */
  width: 36%;
}

.sixteen-nine-container .close-glyph {
  right: 200px; /* Start with original, we'll adjust */
}

/* FLEXIBLE POSITIONING FOR 16:9 MODAL - ADD TO YOUR CSS */

/* Override modal content to use flexbox */
.sixteen-nine-container .modal-content {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

/* Page 1: Center everything in available space */
.sixteen-nine-container .modal-content:not(.expanded) {
  justify-content: center; /* Center the image+button */
}

.sixteen-nine-container .modal-content:not(.expanded) .modal-image-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 0; /* Remove hardcoded margins */
}

/* Page 2: 50/50 split layout */
.sixteen-nine-container .modal-content.expanded {
  justify-content: space-between;
  align-items: center;
  padding: 0 200px; /* Space for columns on sides */
  gap: 40px; /* Space between image and vortex */
}

.sixteen-nine-container .modal-content.expanded .modal-image-container {
  flex: 1; /* Take up left half */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 0;
}

.sixteen-nine-container .modal-content.expanded .modal-description-container {
  flex: 1; /* Take up right half */
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
}

/* Center the modal description content */
.sixteen-nine-container .modal-description {
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  width: 100%;
  height: auto;
  margin: 0;
}

.sixteen-nine-container {
  aspect-ratio: 16/9;
  width: 95vw;
  height: 95vh;
  max-width: 95vw;
  max-height: 53.4vw;
  position: relative;
  overflow: hidden;
  display: flex !important;           /* Add this */
  justify-content: center !important; /* Add this */
  align-items: center !important;     /* Add this */
}

.sixteen-nine-container .glyph-button {
  transform: scale(1.2) translateY(-10px) !important;
}

.sixteen-nine-container .modal-description-container {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

.sixteen-nine-container .modal-description {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  text-align: center !important;
  margin: 0 !important;
  padding: 20px !important; /* Remove the padding-top we deleted earlier */
}

.sixteen-nine-container .modal-description {
  position: fixed !important;
  right: 143px !important;
  width: 36% !important;
  top: 50% !important;
  transform: translateY(-50%) !important;
  /* Remove from modal flex container */
}

.sixteen-nine-container .sanskrit-rain-canvas {
  position: absolute !important;
  top: 50% !important;                    /* Vertical center */
  left: 75% !important;                   /* Horizontal center of right half (50% + 25%) */
  transform: translate(-50%, -50%) !important; /* Center the canvas on that point */
  width: 800px !important;                /* Fixed size instead of 100% */
  height: 600px !important;               /* Fixed size instead of 100% */
  z-index: 0 !important;                  /* Behind text */
}

.sixteen-nine-container .modal-description {
  position: absolute !important;
  top: 50% !important;
  left: 75% !important;
  transform: translate(-50%, -50%) !important;
  z-index: 1 !important;
  width: 400px !important;  /* Give it a specific wider width */
  white-space: normal !important;  /* Allow normal text wrapping */
}

.sixteen-nine-container .modal-content.expanded .modal-image-container {
  position: absolute !important;
  top: 50% !important;
  left: 25% !important;  /* Center of left half */
  transform: translate(-50%, -50%) !important;
}

.modal:has(.modal-content.expanded) .stone-columns {
  display: none !important;
}

.sixteen-nine-container .modal-description {
  box-shadow: none !important;
  backdrop-filter: none !important;
}

.sixteen-nine-container .modal-description::after {
  display: none !important;
}

/* More specific tablet targeting */
@media (min-width: 768px) and (max-width: 1366px) and (orientation: landscape) {
  .sixteen-nine-container {
    width: 90vw !important;
    height: 85vh !important;
  }
  
  .sixteen-nine-container .modal-content.expanded {
    gap: 60px !important;
  }
  
  .sixteen-nine-container .modal-image-container img {
    max-height: 65vh !important;
  }
  
  .sixteen-nine-container .sanskrit-rain-canvas {
    width: 700px !important;
    height: 700px !important;
  }
}

@media (min-width: 768px) and (max-width: 1366px) and (orientation: landscape) {
  /* Page 1 specific fixes */
  .sixteen-nine-container .modal-content:not(.expanded) .modal-image-container img {
    max-height: 60vh !important;  /* Smaller image on Page 1 */
  }
  
  .sixteen-nine-container .glyph-button {
    transform: scale(1.0) translateY(-15px) !important;  /* Smaller button, move up more */
  }
  
  /* Also make sure the container itself is smaller */
  .sixteen-nine-container {
    width: 90vw !important;
    height: 80vh !important;  /* Even smaller height for Page 1 */
  }
}

@media (min-width: 768px) and (max-width: 1366px) and (orientation: landscape) {
 .sixteen-nine-container .close-glyph {
    position: fixed !important;  /* Break out of container */
    right: 50% !important;
    transform: translateX(50%) !important;
    top: 10px !important;        /* Top of actual screen */
    z-index: 3000 !important;    /* Make sure it's above everything */
  }
}

/* ROTATION MESSAGE - ADD TO YOUR CSS */

.rotation-message {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.9);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 2000;
  font-family: 'Orbitron', sans-serif;
  color: var(--cyber-blue);
  text-align: center;
  padding: 20px;
}

.rotation-icon {
  width: 80px;
  height: 80px;
  margin-bottom: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.rotation-glyph {
  font-size: 6rem;  /* Doubled from 3rem */
  color: var(--cyber-blue);
  filter: drop-shadow(0 0 10px var(--cyber-blue));
  animation: rotateGlow 2s ease-in-out infinite;
}

.rotation-text {
  font-size: 1.5rem;
  font-weight: 400;
  line-height: 1.6;
  margin-bottom: 2rem;
  text-shadow: 0 0 10px rgba(79, 212, 198, 0.5);
}

.rotation-om {
  font-size: 2rem;
  color: var(--saffron);
  text-shadow: 
    0 0 10px rgba(212, 128, 77, 0.8),
    0 0 20px rgba(212, 128, 77, 0.4);
  animation: omGlow 3s ease-in-out infinite;
}

@keyframes rotateGlow {
  0%, 100% {
    filter: drop-shadow(0 0 10px var(--cyber-blue));
    transform: rotate(0deg);
  }
  50% {
    filter: drop-shadow(0 0 20px var(--cyber-blue));
    transform: rotate(30deg);  /* More pronounced rotation */
  }
}

@keyframes omGlow {
  0%, 100% {
    text-shadow: 
      0 0 10px rgba(212, 128, 77, 0.8),
      0 0 20px rgba(212, 128, 77, 0.4);
  }
  50% {
    text-shadow: 
      0 0 20px rgba(212, 128, 77, 1),
      0 0 40px rgba(212, 128, 77, 0.6),
      0 0 60px rgba(212, 128, 77, 0.3);
  }
}

/* Hide rotation message in landscape */
@media (orientation: landscape) {
  .rotation-message {
    display: none !important;
  }
}

/* MOBILE STYLES - ADD TO YOUR CSS */
@media (max-width: 768px) {
  /* Hide the 16:9 container system on mobile */
  .modal-viewport,
  .sixteen-nine-container {
    display: none !important;
  }
  
  /* Use your original mobile modal styles */
  .modal {
    padding: 0;
  }
  
  .modal-content {
    width: 100% !important;
    height: 100% !important;
    max-width: 100% !important;
    max-height: 100% !important;
    position: relative !important;
    background: rgba(0, 0, 0, 0.9) !important;
    display: block !important;
  }
  
  /* Your original mobile description positioning */
  .modal-content.expanded .modal-description-container {
    position: absolute;
    top: 150px;
    left: 0%;
    transform: translateX(-5%);
    width: 90%;
    padding-top: 10px !important;
    overflow-y: auto;
    max-height: calc(100vh - 150px);
    display: block;
    text-align: center;
    z-index: 1;
  }
}

/* MOBILE STYLES - FLEXBOX APPROACH */
@media (max-width: 768px) {
  /* Hide the 16:9 container system on mobile */
  .modal-viewport,
  .sixteen-nine-container {
    display: none !important;
  }

  .modal {
    padding: 0;
    display: flex;
    align-items: flex-start !important; /* Changed from center to flex-start */
    justify-content: center;
  }

  .modal-content {
    width: 100% !important;
    height: 100vh !important;
    max-width: 100% !important;
    max-height: 100% !important;
    position: relative !important;
    background: rgba(0, 0, 0, 0.9) !important;
    display: flex !important;
    flex-direction: column !important;
    overflow: hidden;
  }

  /* Image container - mixed height approach */
  .modal-image-container {
    flex-shrink: 0; /* Prevent shrinking */
    flex-grow: 0; /* Prevent growing */
    min-height: 45vh; /* Increased to push description down */
    max-height: 50vh; /* Take up more screen space */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start; /* Push content to top instead of center */
    padding: 0.5rem 1rem 0rem 1rem; /* Removed bottom padding */
    position: relative;
  }

  .modal-image-container img {
    max-width: 90%;
    max-height: 250px; /* Reduced from 300px */
    width: auto;
    height: auto;
    object-fit: contain;
    border-radius: 8px;
    /* Removed margin-top to keep image at top */
  }

  .modal-title {
    margin-top: 0.5rem; /* Reduced spacing */
    margin-bottom: 0.3rem; /* Add bottom margin to create gap before description */
    text-align: center;
    font-size: 1.5rem;
    color: #ff6b35;
    position: relative;
    flex-shrink: 0; /* Keep title from shrinking */
  }

  /* Ensure glyph button shows properly */
  .glyph-button {
    margin-top: 20px !important;
    align-self: center !important;
    flex-shrink: 0 !important;
  }

  /* Description container - position relative to actual viewport, not parent container */
  .modal-content.expanded .modal-description-container {
    /* Use FIXED positioning to position relative to actual viewport */
    position: fixed !important;
    top: 50vh !important; /* Start at actual 50% of real screen */
    left: 5% !important;
    right: 5% !important;
    bottom: 0 !important; /* Extend to actual bottom of viewport */
    
    /* Flexbox properties for internal layout */
    display: flex !important;
    flex-direction: column !important;
    
    /* Spacing and alignment */
    width: 90% !important;
    padding: 1rem 1.5rem 2rem 1.5rem !important;
    margin: 0 !important;
    
    /* Enable scrolling if needed within bottom 50% */
    overflow-y: auto !important;
    
    /* Styling */
    text-align: center !important;
    z-index: 1 !important;
  }

  .modal-description {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: flex-start; /* Start text at top of available space */
  }

  /* Reduce spacing between description lines */
  .glitch-wrapper {
    line-height: 1.4 !important; /* Reduced from 1.6 */
    font-size: 1rem;
  }

  .glitch-wrapper span {
    display: block;
    margin-bottom: 1rem !important; /* Reduced from 1.5rem */
  }

  /* Handle the temp character positioning */
  .temp-char {
    display: inline;
    color: #00ffff;
    opacity: 0.7;
  }

  /* Optional: Add some visual breathing room */
  .modal-description-container::before {
    content: '';
    height: 1rem;
    flex-shrink: 0;
  }
}

/* Optional: Handle very small screens */
@media (max-width: 480px) {
  .modal-image-container {
    padding: 1rem 0.5rem 0.5rem 0.5rem;
  }
  
  .modal-image-container img {
    max-height: 50vh; /* More room for text on very small screens */
  }
  
  .modal-title {
    font-size: 1.3rem;
  }
  
  .modal-content.expanded .modal-description-container {
    padding: 0.5rem 1rem 1.5rem 1rem !important;
  }
}






